/**
 * APIv3 (Beta)
 *  # Introduction Just a quick pick!!! This is our new version of API. Remember, it is not stable yet!!! But we invite you play with it and give us your feedback ;) # Getting Started  E-goi can be integrated with many environments and programming languages via our REST API. We've created a developer focused portal to give your organization a clear and quick overview of how to integrate with E-goi. The developer portal focuses on scenarios for integration and flow of events. We recommend familiarizing yourself with all of the content in the developer portal, before start using our rest API.   The E-goi  APIv3 is served over HTTPS. To ensure data privacy, unencrypted HTTP is not supported.  Request data is passed to the API by POSTing JSON objects to the API endpoints with the appropriate parameters.   BaseURL = api.egoiapp.com  # HTTP Methods for RESTful Services This API supports 5 HTTP methods:  * <b>GET</b>: The HTTP GET method is used to **read** (or retrieve) a representation of a resource. * <b>POST</b>: The POST verb is most-often utilized to **create** new resources. * <b>PATCH</b>: PATCH is used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource * <b>PUT</b>: PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. * <b>DELETE</b>: DELETE is pretty easy to understand. It is used to **delete** a resource identified by a URI.  # Authentication   We use a custom authentication method, you will need a apikey that you can find in your account settings. Below you will see a curl example to get your account information:  #!/bin/bash  curl -X GET 'https://api.egoiapp.com/my-account' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>'  Here you can see a curl Post example with authentication:  #!/bin/bash  curl -X POST 'http://api.egoiapp.com/tags' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>' \\  -H 'Content-Type: application/json' \\  -d '{`name`:`Your custom tag`,`color`:`#FFFFFF`}'  <security-definitions/>
 *
 * The version of the OpenAPI document: 3.0.0-beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Forbidden from '../org.egoi.client.model/Forbidden';
import InternalServerError from '../org.egoi.client.model/InternalServerError';
import NotFound from '../org.egoi.client.model/NotFound';
import PhoneReport from '../org.egoi.client.model/PhoneReport';
import PushReport from '../org.egoi.client.model/PushReport';
import Unauthorized from '../org.egoi.client.model/Unauthorized';
import UnprocessableEntity from '../org.egoi.client.model/UnprocessableEntity';
import WebPushReport from '../org.egoi.client.model/WebPushReport';

/**
* Reports service.
* @module org.egoi.client/org.egoi.client.api/ReportsApi
* @version 3.0.0-beta
*/
export default class ReportsApi {

    /**
    * Constructs a new ReportsApi. 
    * @alias module:org.egoi.client/org.egoi.client.api/ReportsApi
    * @class
    * @param {module:org.egoi.client/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:org.egoi.client/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getPushReport operation.
     * @callback module:org.egoi.client/org.egoi.client.api/ReportsApi~getPushReportCallback
     * @param {String} error Error message, if any.
     * @param {module:org.egoi.client/org.egoi.client.model/PushReport} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get push report
     * Returns a push report given the campaign hash
     * @param {String} campaignHash ID of the Campaign
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.operatingSystems True to show operating system stats (default to true)
     * @param {Boolean} opts.brands True to show brand stats (default to true)
     * @param {module:org.egoi.client/org.egoi.client.api/ReportsApi~getPushReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:org.egoi.client/org.egoi.client.model/PushReport}
     */
    getPushReport(campaignHash, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'campaignHash' is set
      if (campaignHash === undefined || campaignHash === null) {
        throw new Error("Missing the required parameter 'campaignHash' when calling getPushReport");
      }

      let pathParams = {
        'campaign_hash': campaignHash
      };
      let queryParams = {
        'operating_systems': opts['operatingSystems'],
        'brands': opts['brands']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Apikey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PushReport;
      return this.apiClient.callApi(
        '/reports/push/{campaign_hash}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSMSReport operation.
     * @callback module:org.egoi.client/org.egoi.client.api/ReportsApi~getSMSReportCallback
     * @param {String} error Error message, if any.
     * @param {module:org.egoi.client/org.egoi.client.model/PhoneReport} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get sms report
     * Returns sms report given the campaign hash
     * @param {String} campaignHash ID of the Campaign
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.networks True to show network stats (default to true)
     * @param {module:org.egoi.client/org.egoi.client.api/ReportsApi~getSMSReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:org.egoi.client/org.egoi.client.model/PhoneReport}
     */
    getSMSReport(campaignHash, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'campaignHash' is set
      if (campaignHash === undefined || campaignHash === null) {
        throw new Error("Missing the required parameter 'campaignHash' when calling getSMSReport");
      }

      let pathParams = {
        'campaign_hash': campaignHash
      };
      let queryParams = {
        'networks': opts['networks']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Apikey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PhoneReport;
      return this.apiClient.callApi(
        '/reports/sms/{campaign_hash}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoiceReport operation.
     * @callback module:org.egoi.client/org.egoi.client.api/ReportsApi~getVoiceReportCallback
     * @param {String} error Error message, if any.
     * @param {module:org.egoi.client/org.egoi.client.model/PhoneReport} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get voice report
     * Returns voice report given the campaign hash
     * @param {String} campaignHash ID of the Campaign
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.networks True to show network stats (default to true)
     * @param {module:org.egoi.client/org.egoi.client.api/ReportsApi~getVoiceReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:org.egoi.client/org.egoi.client.model/PhoneReport}
     */
    getVoiceReport(campaignHash, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'campaignHash' is set
      if (campaignHash === undefined || campaignHash === null) {
        throw new Error("Missing the required parameter 'campaignHash' when calling getVoiceReport");
      }

      let pathParams = {
        'campaign_hash': campaignHash
      };
      let queryParams = {
        'networks': opts['networks']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Apikey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PhoneReport;
      return this.apiClient.callApi(
        '/reports/voice/{campaign_hash}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWebPushReport operation.
     * @callback module:org.egoi.client/org.egoi.client.api/ReportsApi~getWebPushReportCallback
     * @param {String} error Error message, if any.
     * @param {module:org.egoi.client/org.egoi.client.model/WebPushReport} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get webpush report
     * Returns webpush report given the campaign hash
     * @param {String} campaignHash ID of the Campaign
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.devices True to show device stats (default to true)
     * @param {Boolean} opts.operatingSystems True to show operating systems stats (default to true)
     * @param {Boolean} opts.browsers True to show browser stats (default to true)
     * @param {Boolean} opts.url True to show url stats (default to true)
     * @param {module:org.egoi.client/org.egoi.client.api/ReportsApi~getWebPushReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:org.egoi.client/org.egoi.client.model/WebPushReport}
     */
    getWebPushReport(campaignHash, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'campaignHash' is set
      if (campaignHash === undefined || campaignHash === null) {
        throw new Error("Missing the required parameter 'campaignHash' when calling getWebPushReport");
      }

      let pathParams = {
        'campaign_hash': campaignHash
      };
      let queryParams = {
        'devices': opts['devices'],
        'operating_systems': opts['operatingSystems'],
        'browsers': opts['browsers'],
        'url': opts['url']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Apikey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WebPushReport;
      return this.apiClient.callApi(
        '/reports/web-push/{campaign_hash}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
